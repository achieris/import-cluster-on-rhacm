- name: Import Kubernetes cluster on Red Hat Advanced Cluster Management for Kubernetes 
  hosts: localhost
  collections:
    - kubernetes.core
  tasks:
  - name: Create the managed cluster namespace on RHACM
    kubernetes.core.k8s:
      host: "{{ rhacm_credentials['api'] }}"
      api_key: "{{ rhacm_credentials['token'] }}"
      validate_certs : no            
      name: "{{ managed_cluster_name }}"
      api_version: v1
      kind: Namespace
      state: present
    
  - name: Create the managed cluster secret containing the credentials on RHACM  
    kubernetes.core.k8s:
      host: "{{ rhacm_credentials['api'] }}"
      api_key: "{{ rhacm_credentials['token'] }}"
      validate_certs : no 
      state: present
      definition:
        apiVersion: v1
        kind: Secret
        metadata:
          name: auto-import-secret
          namespace: "{{ managed_cluster_name }}"
        stringData:
          autoImportRetry: "10"
          token: "{{ managed_cluster_credentials['token'] }}"
          server: "{{ managed_cluster_credentials['api'] }}"
        type: Opaque              
          
  - name: Create the managed cluster crd  
    kubernetes.core.k8s:
      host: "{{ rhacm_credentials['api'] }}"
      api_key: "{{ rhacm_credentials['token'] }}"
      validate_certs : no 
      state: present
      definition:
        apiVersion: cluster.open-cluster-management.io/v1
        kind: ManagedCluster
        metadata:
          labels:
            cloud: auto-detect
            vendor: auto-detect
            cluster_type: "{{ cluster_type }}"
          name: "{{ managed_cluster_name }}"
        spec:
          hubAcceptsClient: true
          leaseDurationSeconds: 60

  - name: Create the KlusterletAddonConfig
    kubernetes.core.k8s:
      host: "{{ rhacm_credentials['api'] }}"
      api_key: "{{ rhacm_credentials['token'] }}"
      validate_certs : no
      state: present
      definition:
        apiVersion: agent.open-cluster-management.io/v1
        kind: KlusterletAddonConfig
        metadata:
          name: "{{ managed_cluster_name }}"
          namespace: "{{ managed_cluster_name }}"
        spec:
          clusterName: "{{ managed_cluster_name }}"
          clusterNamespace: "{{ managed_cluster_name }}"
          clusterLabels:
            cloud: auto-detect
            vendor: auto-detect
            cluster_type: "{{ cluster_type }}"
          applicationManager:
            enabled: true
            argocdCluster: true
          policyController:
            enabled: true
          searchCollector:
            enabled: true
          certPolicyController:
            enabled: true
          iamPolicyController:
            enabled: true

  vars:  
    rhacm_credentials:  "{{ lookup('aws_secret', 'rhacm', region='eu-central-1',aws_access_key=aws_access_key, aws_secret_key=aws_secret_key,nested=true)  }}"
    managed_cluster_credentials:  "{{ lookup('aws_secret', managed_cluster_name, region='eu-central-1',aws_access_key=aws_access_key, aws_secret_key=aws_secret_key, nested=true) }}"
